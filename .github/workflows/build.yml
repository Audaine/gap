name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  # Indicates the location of the vcpkg as a Git submodule of the project repository.
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg
  # Tells vcpkg where binary packages are stored.
  VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/vcpkg/bincache
  # Use specific vcpkg version
  VCPKG_COMMIT_ID: '5568f110b509a9fd90711978a7cb76bae75bb092'

jobs:
  build:
    runs-on: ubuntu-latest

    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v2
      with:
          submodules: true

    - name: Install static analysis tools
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-tidy cppcheck clang-12

    - name: "Create directory '${{ env.VCPKG_DEFAULT_BINARY_CACHE }}'"
      run: mkdir -p $VCPKG_DEFAULT_BINARY_CACHE
      shell: bash

    - name: Restore artifacts, or setup vcpkg
      uses: lukka/get-cmake@latest

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgGitCommitId: '${{ env.VCPKG_COMMIT_ID }}'
        vcpkgJsonGlob: 'vcpkg.json'

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build \
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
        -DCMAKE_C_COMPILER=clang-12 \
        -DCMAKE_CXX_COMPILER=clang++-12 \
        -DCMAKE_VERBOSE_MAKEFILE=True \
        -DENABLE_TESTING=ON \
        --preset ninja-multi-vcpkg

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --preset ninja-multi-vcpkg

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
